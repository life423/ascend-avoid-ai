name: Deploy to Azure - Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: aiandrew631/ascend-avoid
  AZURE_CONTAINER_APP: ascend-avoid
  AZURE_RESOURCE_GROUP: ascend-avoid-rg

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd server && npm ci
    
    - name: Run type checking
      run: |
        npm run type-check
        cd server && npm run type-check
    
    - name: Build application
      run: npm run build
    
    - name: Verify build outputs
      run: |
        echo "Checking client build..."
        ls -la dist/
        echo "Checking server build..."
        ls -la server/dist/

  deploy:
    name: Deploy to Azure
    needs: build-and-test
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:latest
          ${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
        cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
    
    - name: Azure Login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Deploy to Azure Container Apps
      run: |
        # Update the container app with the new image
        az containerapp update \
          --name ${{ env.AZURE_CONTAINER_APP }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --image ${{ env.IMAGE_NAME }}:${{ github.sha }}
        
        # Update environment variables for production
        az containerapp update \
          --name ${{ env.AZURE_CONTAINER_APP }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --set-env-vars \
            "NODE_ENV=production" \
            "PORT=3000"
        
        # Update ingress to use the correct production port
        az containerapp ingress update \
          --name ${{ env.AZURE_CONTAINER_APP }} \
          --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
          --target-port 3000
    
    - name: Verify deployment
      run: |
        echo "üöÄ Deployment complete!"
        echo "üì± App URL: https://${{ env.AZURE_CONTAINER_APP }}.azurecontainerapps.io"
        echo "üåê Custom domain: https://ascend.drewclark.io"
        echo "üéÆ Game server running on port 3000"
        echo "üè∑Ô∏è Deployed version: ${{ github.sha }}"